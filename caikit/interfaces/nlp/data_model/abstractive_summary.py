# *****************************************************************#
# (C) Copyright IBM Corporation 2023.                             #
#                                                                 #
# The source code for this program is not published or otherwise  #
# divested of its trade secrets, irrespective of what has been    #
# deposited with the U.S. Copyright Office.                       #
# *****************************************************************#

"""Data structures for abstractive summary.
"""

# Standard
from typing import List

# First Party
from py_to_proto.dataclass_to_proto import Annotated, FieldNumber
import alog

# Local
from ....core.data_model import DataObjectBase, dataobject
from ....core.toolkit.errors import error_handler
from ...common.data_model import ProducerId

log = alog.use_channel("DATAM")
error = error_handler.get(log)


@dataobject(package="watson_core_data_model.nlp")
class AbstractiveSummary(DataObjectBase):
    """Construct a new answer.
    Args:
        summary:  list(str)
            The list of the summaries (example: 2 summaries generated by the model for the user and agent )
            parts of the conversation
        producer_id:  ProducerId or None
            The block that generated this abstractive summary.  None (default) indicates
            that this value is not set.

    Notes:

    """

    summary: Annotated[List[str], FieldNumber(1)]
    producer_id: Annotated[ProducerId, FieldNumber(2)]

    def __init__(self, summary: List[str], producer_id=None):
        error.type_check("<NLP12866244E>", list, summary=summary)
        error.type_check(
            "<NLP95017405E>",
            ProducerId,
            allow_none=True,
            producer_id=producer_id,
        )

        super().__init__()
        self.producer_id = producer_id
        self.summary = summary
